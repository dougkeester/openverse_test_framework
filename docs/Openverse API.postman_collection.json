{
	"info": {
		"_postman_id": "80786762-ad2e-4f60-93f4-691958729786",
		"name": "Openverse API",
		"description": "\nOpenverse is a search engine for openly-licensed media. The Openverse\nAPI is a system that allows programmatic access to public domain digital\nmedia. It is our ambition to index and catalog billions of\nopenly-licensed works, including articles, songs, videos, photographs,\npaintings, and more.\n\nUsing this API, developers will be able to access the digital commons in\ntheir own applications. You can see some examples of\n[apps built with Openverse](https://docs.openverse.org/api/reference/made_with_ov.html)\nin our docs.\n\n\nContact Support:\n Name: Openverse\n Email: openverse@wordpress.org",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35125261"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "audio",
					"item": [
						{
							"name": "{identifier}",
							"item": [
								{
									"name": "related",
									"item": [
										{
											"name": "audio related",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/related/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														"related",
														""
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "\nGet related audio files for a specified audio track.\n\nBy using this endpoint, you can get the details of related audio such as\n`id`, `title`, `indexed_on`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `genres`, `filesize`, `filetype`, `tags`, `alt_files`, `attribution`, `fields_matched`, `mature`, `audio_set`, `duration`, `bit_rate`, `sample_rate`, `thumbnail`, `detail_url`, `related_url`, `waveform`, `peaks` and `unstable__sensitivity`."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/related/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"related",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"page\": \"<integer>\",\n  \"page_size\": \"<integer>\",\n  \"results\": [\n    {\n      \"alt_files\": [\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        },\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        }\n      ],\n      \"attribution\": \"<string>\",\n      \"audio_set\": {\n        \"title\": \"<string>\",\n        \"foreign_landing_url\": \"<string>\",\n        \"creator\": \"<string>\",\n        \"creator_url\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filesize\": \"<integer>\",\n        \"filetype\": \"<string>\"\n      },\n      \"detail_url\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"indexed_on\": \"<dateTime>\",\n      \"license\": \"<string>\",\n      \"license_url\": \"<string>\",\n      \"mature\": \"<boolean>\",\n      \"related_url\": \"<uri>\",\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        }\n      ],\n      \"thumbnail\": \"<uri>\",\n      \"waveform\": \"<uri>\",\n      \"title\": \"<string>\",\n      \"foreign_landing_url\": \"<string>\",\n      \"url\": \"<string>\",\n      \"creator\": \"<string>\",\n      \"creator_url\": \"<string>\",\n      \"license_version\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"source\": \"<string>\",\n      \"category\": \"<string>\",\n      \"genres\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"filesize\": \"<integer>\",\n      \"filetype\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"bit_rate\": \"<integer>\",\n      \"sample_rate\": \"<integer>\"\n    },\n    {\n      \"alt_files\": [\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        },\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        }\n      ],\n      \"attribution\": \"<string>\",\n      \"audio_set\": {\n        \"title\": \"<string>\",\n        \"foreign_landing_url\": \"<string>\",\n        \"creator\": \"<string>\",\n        \"creator_url\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filesize\": \"<integer>\",\n        \"filetype\": \"<string>\"\n      },\n      \"detail_url\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"indexed_on\": \"<dateTime>\",\n      \"license\": \"<string>\",\n      \"license_url\": \"<string>\",\n      \"mature\": \"<boolean>\",\n      \"related_url\": \"<uri>\",\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        }\n      ],\n      \"thumbnail\": \"<uri>\",\n      \"waveform\": \"<uri>\",\n      \"title\": \"<string>\",\n      \"foreign_landing_url\": \"<string>\",\n      \"url\": \"<string>\",\n      \"creator\": \"<string>\",\n      \"creator_url\": \"<string>\",\n      \"license_version\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"source\": \"<string>\",\n      \"category\": \"<string>\",\n      \"genres\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"filesize\": \"<integer>\",\n      \"filetype\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"bit_rate\": \"<integer>\",\n      \"sample_rate\": \"<integer>\"\n    }\n  ],\n  \"result_count\": \"<integer>\",\n  \"page_count\": \"<integer>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/related/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"related",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/related/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"related",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "report",
									"item": [
										{
											"name": "audio report",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "identifier",
															"value": "<uuid>",
															"description": "(Required) Our unique identifier for an open-licensed work."
														},
														{
															"key": "reason",
															"value": "mature",
															"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The explanation on why media is being reported."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/report/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														"report",
														""
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "Report an issue about a specified audio track to Openverse.\n\nBy using this endpoint, you can report an audio track if it infringes\ncopyright, contains mature or sensitive content or some other reason."
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "identifier",
																	"value": "<uuid>",
																	"description": "(Required) Our unique identifier for an open-licensed work."
																},
																{
																	"key": "reason",
																	"value": "mature",
																	"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The explanation on why media is being reported."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/report/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"report",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"identifier\": \"<uuid>\",\n  \"reason\": \"mature\",\n  \"description\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "identifier",
																	"value": "<uuid>",
																	"description": "(Required) Our unique identifier for an open-licensed work."
																},
																{
																	"key": "reason",
																	"value": "mature",
																	"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The explanation on why media is being reported."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/report/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"report",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "identifier",
																	"value": "<uuid>",
																	"description": "(Required) Our unique identifier for an open-licensed work."
																},
																{
																	"key": "reason",
																	"value": "mature",
																	"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The explanation on why media is being reported."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/report/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"report",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "thumb",
									"item": [
										{
											"name": "audio thumb",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/thumb/?full_size=false&compressed=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														"thumb",
														""
													],
													"query": [
														{
															"key": "full_size",
															"value": "false",
															"description": "whether to render the actual image and not a thumbnail version"
														},
														{
															"key": "compressed",
															"value": "<boolean>",
															"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
														}
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieve the scaled down and compressed thumbnail of the artwork of an\naudio track or its audio set."
											},
											"response": [
												{
													"name": "Thumbnail image",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/thumb/?full_size=false&compressed=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"thumb",
																""
															],
															"query": [
																{
																	"key": "full_size",
																	"value": "false",
																	"description": "whether to render the actual image and not a thumbnail version"
																},
																{
																	"key": "compressed",
																	"value": "<boolean>",
																	"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
																}
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/thumb/?full_size=false&compressed=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"thumb",
																""
															],
															"query": [
																{
																	"key": "full_size",
																	"value": "false",
																	"description": "whether to render the actual image and not a thumbnail version"
																},
																{
																	"key": "compressed",
																	"value": "<boolean>",
																	"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
																}
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/thumb/?full_size=false&compressed=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"thumb",
																""
															],
															"query": [
																{
																	"key": "full_size",
																	"value": "false",
																	"description": "whether to render the actual image and not a thumbnail version"
																},
																{
																	"key": "compressed",
																	"value": "<boolean>",
																	"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
																}
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "waveform",
									"item": [
										{
											"name": "audio waveform",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/waveform/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														"waveform",
														""
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "Get the waveform peaks for an audio track.\n\nThe peaks are provided as a list of numbers, each of these numbers being\na fraction between 0 and 1. The list contains approximately 1000 numbers,\nalthough it can be slightly higher or lower, depending on the track's length."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/waveform/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"waveform",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"len\": \"<integer>\",\n  \"points\": [\n    \"<double>\",\n    \"<double>\"\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/waveform/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"waveform",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/audio/:identifier/waveform/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"audio",
																":identifier",
																"waveform",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "audio detail",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/audio/:identifier/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"audio",
												":identifier",
												""
											],
											"variable": [
												{
													"key": "identifier",
													"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
													"description": "(Required) "
												}
											]
										},
										"description": "\nGet the details of a specified audio track.\n\nBy using this endpoint, you can obtain info about audio files such as\n`id`, `title`, `indexed_on`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `genres`, `filesize`, `filetype`, `tags`, `alt_files`, `attribution`, `fields_matched`, `mature`, `audio_set`, `duration`, `bit_rate`, `sample_rate`, `thumbnail`, `detail_url`, `related_url`, `waveform`, `peaks` and `unstable__sensitivity`"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														""
													],
													"variable": [
														{
															"key": "identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"alt_files\": [\n    {\n      \"filetype\": \"<string>\",\n      \"url\": \"<uri>\",\n      \"bit_rate\": \"<integer>\",\n      \"filesize\": \"<integer>\",\n      \"sample_rate\": \"<integer>\"\n    },\n    {\n      \"filetype\": \"<string>\",\n      \"url\": \"<uri>\",\n      \"bit_rate\": \"<integer>\",\n      \"filesize\": \"<integer>\",\n      \"sample_rate\": \"<integer>\"\n    }\n  ],\n  \"attribution\": \"<string>\",\n  \"audio_set\": {\n    \"title\": \"<string>\",\n    \"foreign_landing_url\": \"<string>\",\n    \"creator\": \"<string>\",\n    \"creator_url\": \"<string>\",\n    \"url\": \"<string>\",\n    \"filesize\": \"<integer>\",\n    \"filetype\": \"<string>\"\n  },\n  \"detail_url\": \"<uri>\",\n  \"fields_matched\": [],\n  \"id\": \"<string>\",\n  \"indexed_on\": \"<dateTime>\",\n  \"license\": \"<string>\",\n  \"license_url\": \"<string>\",\n  \"mature\": \"<boolean>\",\n  \"related_url\": \"<uri>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"unstable__provider\": \"<string>\",\n      \"accuracy\": \"<double>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"unstable__provider\": \"<string>\",\n      \"accuracy\": \"<double>\"\n    }\n  ],\n  \"thumbnail\": \"<uri>\",\n  \"waveform\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"foreign_landing_url\": \"<string>\",\n  \"url\": \"<string>\",\n  \"creator\": \"<string>\",\n  \"creator_url\": \"<string>\",\n  \"license_version\": \"<string>\",\n  \"provider\": \"<string>\",\n  \"source\": \"<string>\",\n  \"category\": \"<string>\",\n  \"genres\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"filesize\": \"<integer>\",\n  \"filetype\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"bit_rate\": \"<integer>\",\n  \"sample_rate\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														""
													],
													"variable": [
														{
															"key": "identifier"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/:identifier/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														":identifier",
														""
													],
													"variable": [
														{
															"key": "identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "stats",
							"item": [
								{
									"name": "audio stats",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/audio/stats/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"audio",
												"stats",
												""
											]
										},
										"description": "\nGet a list of all content providers and their respective number of\naudio files in the Openverse catalog.\n\nBy using this endpoint, you can obtain info about content providers such\nas `source_name`, `display_name`, `source_url`, `logo_url` and `media_count`."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/stats/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														"stats",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"display_name\": \"<string>\",\n    \"logo_url\": \"<string>\",\n    \"media_count\": \"<integer>\",\n    \"source_name\": \"<string>\",\n    \"source_url\": \"<uri>\"\n  },\n  {\n    \"display_name\": \"<string>\",\n    \"logo_url\": \"<string>\",\n    \"media_count\": \"<integer>\",\n    \"source_name\": \"<string>\",\n    \"source_url\": \"<uri>\"\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/audio/stats/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"audio",
														"stats",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "audio search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/audio/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&length=<string>&peaks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"audio",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of results to retrieve."
										},
										{
											"key": "page_size",
											"value": "20",
											"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "A query string that should not exceed 200 characters in length"
										},
										{
											"key": "source",
											"value": "<string>",
											"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
										},
										{
											"key": "excluded_source",
											"value": "<string>",
											"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
										},
										{
											"key": "title",
											"value": "<string>",
											"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
										},
										{
											"key": "creator",
											"value": "<string>",
											"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
										},
										{
											"key": "unstable__collection",
											"value": "creator",
											"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
										},
										{
											"key": "unstable__tag",
											"value": "<string>",
											"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
										},
										{
											"key": "license",
											"value": "<string>",
											"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
										},
										{
											"key": "license_type",
											"value": "<string>",
											"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
										},
										{
											"key": "filter_dead",
											"value": "true",
											"description": "Control whether 404 links are filtered out."
										},
										{
											"key": "extension",
											"value": "<string>",
											"description": "A comma separated list of desired file extensions."
										},
										{
											"key": "mature",
											"value": "false",
											"description": "Whether to include sensitive content."
										},
										{
											"key": "unstable__sort_by",
											"value": "relevance",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
										},
										{
											"key": "unstable__sort_dir",
											"value": "desc",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
										},
										{
											"key": "unstable__authority",
											"value": "false",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
										},
										{
											"key": "unstable__authority_boost",
											"value": "1",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
										},
										{
											"key": "unstable__include_sensitive_results",
											"value": "false",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "A comma separated list of categories; available categories include: `audiobook`, `music`, `news`, `podcast`, `pronunciation`, and `sound_effect`."
										},
										{
											"key": "length",
											"value": "<string>",
											"description": "A comma separated list of lengths; available lengths include: `long`, `medium`, `short`, and `shortest`."
										},
										{
											"key": "peaks",
											"value": "false",
											"description": "Whether to include the waveform peaks or not"
										}
									]
								},
								"description": "\nReturn audio files that match the query.\n\nThis endpoint allows you to search within specific fields, or to retrieve\na collection of all audio files from a specific source, creator or tag.\nResults are paginated on the basis of the `page` parameter. The `page_size`\nparameter controls the total number of pages.\n\nAlthough there may be millions of relevant records, only the most relevant\nor the most recent several thousand records can be viewed. This is by design:\nthe search endpoint should be used to find the top 10,000 most relevant\nresults, not for exhaustive search or bulk download of every barely relevant\nresult. As such, the caller should not try to access pages beyond `page_count`,\nor else the server will reject the query.\n\n### Default search\nThe **default search** allows users to find media based on a query string.\nIt supports a wide range of optional filters to narrow down search results\naccording to specific needs.\n\nBy default, this endpoint performs a full-text search for the value of `q` parameter.\nYou can search within the `creator`, `title` or `tags` fields by omitting\nthe `q` parameter and using one of these field parameters.\nThese results can be filtered by `source`, `excluded_source`, `license`, `license_type`, `creator`, `tags`, `title`, `filter_dead`, `extension`, `mature`, `unstable__include_sensitive_results`, `category` and `length`.\n\nThe default search results are sorted by relevance.\n\n### Collection search\nThe collection search allows to retrieve a collection of media from a specific source,\ncreator or tag. The `unstable__collection` parameter is used to specify the type of collection to retrieve.\n\n- `unstable__collection=tag&unstable__tag=tagName` will return the media with tag `tagName`.\n- `unstable__collection=source&source=sourceName` will return the media from source `sourceName`.\n- `unstable__collection=creator&creator=creatorName&source=sourceName` will return the media by creator `creatorName` at `sourceName`.\n\nCollection results are sorted by the time they were added to Openverse, with the most recent\nadditions appearing first. The filters such as `license` are not available for collections.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/audio/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&length=<string>&peaks=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"audio",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of results to retrieve."
												},
												{
													"key": "page_size",
													"value": "20",
													"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "A query string that should not exceed 200 characters in length"
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
												},
												{
													"key": "excluded_source",
													"value": "<string>",
													"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "creator",
													"value": "<string>",
													"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
												},
												{
													"key": "unstable__collection",
													"value": "creator",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
												},
												{
													"key": "unstable__tag",
													"value": "<string>",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
												},
												{
													"key": "license",
													"value": "<string>",
													"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
												},
												{
													"key": "license_type",
													"value": "<string>",
													"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
												},
												{
													"key": "filter_dead",
													"value": "true",
													"description": "Control whether 404 links are filtered out."
												},
												{
													"key": "extension",
													"value": "<string>",
													"description": "A comma separated list of desired file extensions."
												},
												{
													"key": "mature",
													"value": "false",
													"description": "Whether to include sensitive content."
												},
												{
													"key": "unstable__sort_by",
													"value": "relevance",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
												},
												{
													"key": "unstable__sort_dir",
													"value": "desc",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
												},
												{
													"key": "unstable__authority",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
												},
												{
													"key": "unstable__authority_boost",
													"value": "1",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
												},
												{
													"key": "unstable__include_sensitive_results",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "A comma separated list of categories; available categories include: `audiobook`, `music`, `news`, `podcast`, `pronunciation`, and `sound_effect`."
												},
												{
													"key": "length",
													"value": "<string>",
													"description": "A comma separated list of lengths; available lengths include: `long`, `medium`, `short`, and `shortest`."
												},
												{
													"key": "peaks",
													"value": "false",
													"description": "Whether to include the waveform peaks or not"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"page\": \"<integer>\",\n  \"page_size\": \"<integer>\",\n  \"results\": [\n    {\n      \"alt_files\": [\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        },\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        }\n      ],\n      \"attribution\": \"<string>\",\n      \"audio_set\": {\n        \"title\": \"<string>\",\n        \"foreign_landing_url\": \"<string>\",\n        \"creator\": \"<string>\",\n        \"creator_url\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filesize\": \"<integer>\",\n        \"filetype\": \"<string>\"\n      },\n      \"detail_url\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"indexed_on\": \"<dateTime>\",\n      \"license\": \"<string>\",\n      \"license_url\": \"<string>\",\n      \"mature\": \"<boolean>\",\n      \"related_url\": \"<uri>\",\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        }\n      ],\n      \"thumbnail\": \"<uri>\",\n      \"waveform\": \"<uri>\",\n      \"title\": \"<string>\",\n      \"foreign_landing_url\": \"<string>\",\n      \"url\": \"<string>\",\n      \"creator\": \"<string>\",\n      \"creator_url\": \"<string>\",\n      \"license_version\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"source\": \"<string>\",\n      \"category\": \"<string>\",\n      \"genres\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"filesize\": \"<integer>\",\n      \"filetype\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"bit_rate\": \"<integer>\",\n      \"sample_rate\": \"<integer>\"\n    },\n    {\n      \"alt_files\": [\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        },\n        {\n          \"filetype\": \"<string>\",\n          \"url\": \"<uri>\",\n          \"bit_rate\": \"<integer>\",\n          \"filesize\": \"<integer>\",\n          \"sample_rate\": \"<integer>\"\n        }\n      ],\n      \"attribution\": \"<string>\",\n      \"audio_set\": {\n        \"title\": \"<string>\",\n        \"foreign_landing_url\": \"<string>\",\n        \"creator\": \"<string>\",\n        \"creator_url\": \"<string>\",\n        \"url\": \"<string>\",\n        \"filesize\": \"<integer>\",\n        \"filetype\": \"<string>\"\n      },\n      \"detail_url\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"indexed_on\": \"<dateTime>\",\n      \"license\": \"<string>\",\n      \"license_url\": \"<string>\",\n      \"mature\": \"<boolean>\",\n      \"related_url\": \"<uri>\",\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        }\n      ],\n      \"thumbnail\": \"<uri>\",\n      \"waveform\": \"<uri>\",\n      \"title\": \"<string>\",\n      \"foreign_landing_url\": \"<string>\",\n      \"url\": \"<string>\",\n      \"creator\": \"<string>\",\n      \"creator_url\": \"<string>\",\n      \"license_version\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"source\": \"<string>\",\n      \"category\": \"<string>\",\n      \"genres\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"filesize\": \"<integer>\",\n      \"filetype\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"bit_rate\": \"<integer>\",\n      \"sample_rate\": \"<integer>\"\n    }\n  ],\n  \"result_count\": \"<integer>\",\n  \"page_count\": \"<integer>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/audio/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&length=<string>&peaks=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"audio",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of results to retrieve."
												},
												{
													"key": "page_size",
													"value": "20",
													"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "A query string that should not exceed 200 characters in length"
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
												},
												{
													"key": "excluded_source",
													"value": "<string>",
													"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "creator",
													"value": "<string>",
													"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
												},
												{
													"key": "unstable__collection",
													"value": "creator",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
												},
												{
													"key": "unstable__tag",
													"value": "<string>",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
												},
												{
													"key": "license",
													"value": "<string>",
													"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
												},
												{
													"key": "license_type",
													"value": "<string>",
													"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
												},
												{
													"key": "filter_dead",
													"value": "true",
													"description": "Control whether 404 links are filtered out."
												},
												{
													"key": "extension",
													"value": "<string>",
													"description": "A comma separated list of desired file extensions."
												},
												{
													"key": "mature",
													"value": "false",
													"description": "Whether to include sensitive content."
												},
												{
													"key": "unstable__sort_by",
													"value": "relevance",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
												},
												{
													"key": "unstable__sort_dir",
													"value": "desc",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
												},
												{
													"key": "unstable__authority",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
												},
												{
													"key": "unstable__authority_boost",
													"value": "1",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
												},
												{
													"key": "unstable__include_sensitive_results",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "A comma separated list of categories; available categories include: `audiobook`, `music`, `news`, `podcast`, `pronunciation`, and `sound_effect`."
												},
												{
													"key": "length",
													"value": "<string>",
													"description": "A comma separated list of lengths; available lengths include: `long`, `medium`, `short`, and `shortest`."
												},
												{
													"key": "peaks",
													"value": "false",
													"description": "Whether to include the waveform peaks or not"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/audio/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&length=<string>&peaks=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"audio",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of results to retrieve."
												},
												{
													"key": "page_size",
													"value": "20",
													"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "A query string that should not exceed 200 characters in length"
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
												},
												{
													"key": "excluded_source",
													"value": "<string>",
													"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/audio/stats/.\n"
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "creator",
													"value": "<string>",
													"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
												},
												{
													"key": "unstable__collection",
													"value": "creator",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
												},
												{
													"key": "unstable__tag",
													"value": "<string>",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
												},
												{
													"key": "license",
													"value": "<string>",
													"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
												},
												{
													"key": "license_type",
													"value": "<string>",
													"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
												},
												{
													"key": "filter_dead",
													"value": "true",
													"description": "Control whether 404 links are filtered out."
												},
												{
													"key": "extension",
													"value": "<string>",
													"description": "A comma separated list of desired file extensions."
												},
												{
													"key": "mature",
													"value": "false",
													"description": "Whether to include sensitive content."
												},
												{
													"key": "unstable__sort_by",
													"value": "relevance",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
												},
												{
													"key": "unstable__sort_dir",
													"value": "desc",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
												},
												{
													"key": "unstable__authority",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
												},
												{
													"key": "unstable__authority_boost",
													"value": "1",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
												},
												{
													"key": "unstable__include_sensitive_results",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "A comma separated list of categories; available categories include: `audiobook`, `music`, `news`, `podcast`, `pronunciation`, and `sound_effect`."
												},
												{
													"key": "length",
													"value": "<string>",
													"description": "A comma separated list of lengths; available lengths include: `long`, `medium`, `short`, and `shortest`."
												},
												{
													"key": "peaks",
													"value": "false",
													"description": "Whether to include the waveform peaks or not"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "auth_tokens",
					"item": [
						{
							"name": "register",
							"item": [
								{
									"name": "register",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "description",
													"value": "<string>",
													"description": "(Required) A description of what you are trying to achieve with your project using the API. Please provide as much detail as possible!"
												},
												{
													"key": "email",
													"value": "<email>",
													"description": "(Required) A valid email that we can reach you at if we have any questions about your use case or data consumption."
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) A unique human-readable name for your application or project requiring access to the Openverse API."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/auth_tokens/register/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auth_tokens",
												"register",
												""
											]
										},
										"description": "Register an application to access to API via OAuth2.\n\nUpon registering, you will receive a `client_id` and `client_secret`,\nwhich you can then use to authenticate using the standard OAuth2 flow.\n\n> ⚠️ **WARNINGS:**\n> - Store your `client_id` and `client_secret` because you will not be\n>   able to retrieve them later.\n> - You must keep `client_secret` confidential, as anybody with your\n>   `client_secret` can impersonate your application.\n\nYou must verify your email address by click the link sent to you in an\nemail. Until you do that, the application will be subject to the same\nrate limits as an anonymous user."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "description",
															"value": "<string>",
															"description": "(Required) A description of what you are trying to achieve with your project using the API. Please provide as much detail as possible!"
														},
														{
															"key": "email",
															"value": "<email>",
															"description": "(Required) A valid email that we can reach you at if we have any questions about your use case or data consumption."
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) A unique human-readable name for your application or project requiring access to the Openverse API."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/register/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"register",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"msg\": \"<string>\",\n  \"name\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "description",
															"value": "<string>",
															"description": "(Required) A description of what you are trying to achieve with your project using the API. Please provide as much detail as possible!"
														},
														{
															"key": "email",
															"value": "<email>",
															"description": "(Required) A valid email that we can reach you at if we have any questions about your use case or data consumption."
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) A unique human-readable name for your application or project requiring access to the Openverse API."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/register/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"register",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "description",
															"value": "<string>",
															"description": "(Required) A description of what you are trying to achieve with your project using the API. Please provide as much detail as possible!"
														},
														{
															"key": "email",
															"value": "<email>",
															"description": "(Required) A valid email that we can reach you at if we have any questions about your use case or data consumption."
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) A unique human-readable name for your application or project requiring access to the Openverse API."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/register/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"register",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\"\n}"
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "description",
															"value": "<string>",
															"description": "(Required) A description of what you are trying to achieve with your project using the API. Please provide as much detail as possible!"
														},
														{
															"key": "email",
															"value": "<email>",
															"description": "(Required) A valid email that we can reach you at if we have any questions about your use case or data consumption."
														},
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) A unique human-readable name for your application or project requiring access to the Openverse API."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/register/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"register",
														""
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "token",
							"item": [
								{
									"name": "token",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) The unique, public identifier of your application."
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"description": "(Required) The secret key used to authenticate your application."
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"description": "(Required) * `client_credentials` - client_credentials"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/auth_tokens/token/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auth_tokens",
												"token",
												""
											]
										},
										"description": "Get an access token using client credentials.\n\nTo authenticate your requests to the Openverse API, you need to provide\nan access token as a bearer token in the `Authorization` header of your\nrequests. This endpoint takes your client ID and secret, and issues an\naccess token.\n\n> **NOTE:** This endpoint only accepts data as\n> `application/x-www-form-urlencoded`. Any other encoding will not work.\n\nOnce your access token expires, you can request another one from this\nendpoint."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The unique, public identifier of your application."
														},
														{
															"key": "client_secret",
															"value": "<string>",
															"description": "(Required) The secret key used to authenticate your application."
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"description": "(Required) * `client_credentials` - client_credentials"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/token/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"token",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The unique, public identifier of your application."
														},
														{
															"key": "client_secret",
															"value": "<string>",
															"description": "(Required) The secret key used to authenticate your application."
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"description": "(Required) * `client_credentials` - client_credentials"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/token/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"token",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The unique, public identifier of your application."
														},
														{
															"key": "client_secret",
															"value": "<string>",
															"description": "(Required) The secret key used to authenticate your application."
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"description": "(Required) * `client_credentials` - client_credentials"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/auth_tokens/token/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"auth_tokens",
														"token",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "images",
					"item": [
						{
							"name": "{identifier}",
							"item": [
								{
									"name": "related",
									"item": [
										{
											"name": "images related",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/related/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														"related",
														""
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "\nGet related images for a specified image.\n\nBy using this endpoint, you can get the details of related images such as\n`id`, `title`, `indexed_on`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `filesize`, `filetype`, `tags`, `attribution`, `fields_matched`, `mature`, `height`, `width`, `thumbnail`, `detail_url`, `related_url` and `unstable__sensitivity`."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/related/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"related",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"attribution\": \"<string>\",\n  \"detail_url\": \"<uri>\",\n  \"fields_matched\": [],\n  \"id\": \"<string>\",\n  \"indexed_on\": \"<dateTime>\",\n  \"license\": \"<string>\",\n  \"license_url\": \"<string>\",\n  \"mature\": \"<boolean>\",\n  \"related_url\": \"<uri>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"unstable__provider\": \"<string>\",\n      \"accuracy\": \"<double>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"unstable__provider\": \"<string>\",\n      \"accuracy\": \"<double>\"\n    }\n  ],\n  \"thumbnail\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"foreign_landing_url\": \"<string>\",\n  \"url\": \"<string>\",\n  \"creator\": \"<string>\",\n  \"creator_url\": \"<string>\",\n  \"license_version\": \"<string>\",\n  \"provider\": \"<string>\",\n  \"source\": \"<string>\",\n  \"category\": \"<string>\",\n  \"filesize\": \"<integer>\",\n  \"filetype\": \"<string>\",\n  \"height\": \"<integer>\",\n  \"width\": \"<integer>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/related/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"related",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/related/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"related",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "report",
									"item": [
										{
											"name": "images report",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "identifier",
															"value": "<uuid>",
															"description": "(Required) Our unique identifier for an open-licensed work."
														},
														{
															"key": "reason",
															"value": "mature",
															"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The explanation on why media is being reported."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/report/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														"report",
														""
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "Report an issue about a specified image to Openverse.\n\nBy using this endpoint, you can report an image if it infringes\ncopyright, contains mature or sensitive content or some other reason."
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "identifier",
																	"value": "<uuid>",
																	"description": "(Required) Our unique identifier for an open-licensed work."
																},
																{
																	"key": "reason",
																	"value": "mature",
																	"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The explanation on why media is being reported."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/report/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"report",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"identifier\": \"<uuid>\",\n  \"reason\": \"mature\",\n  \"description\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "identifier",
																	"value": "<uuid>",
																	"description": "(Required) Our unique identifier for an open-licensed work."
																},
																{
																	"key": "reason",
																	"value": "mature",
																	"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The explanation on why media is being reported."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/report/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"report",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "identifier",
																	"value": "<uuid>",
																	"description": "(Required) Our unique identifier for an open-licensed work."
																},
																{
																	"key": "reason",
																	"value": "mature",
																	"description": "(Required) The reason to report media to Openverse.\n\n* `mature` - mature\n* `dmca` - dmca\n* `other` - other"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The explanation on why media is being reported."
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/report/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"report",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "thumb",
									"item": [
										{
											"name": "images thumb",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/thumb/?full_size=false&compressed=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														"thumb",
														""
													],
													"query": [
														{
															"key": "full_size",
															"value": "false",
															"description": "whether to render the actual image and not a thumbnail version"
														},
														{
															"key": "compressed",
															"value": "<boolean>",
															"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
														}
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieve the scaled down and compressed thumbnail of the image."
											},
											"response": [
												{
													"name": "Thumbnail image",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/thumb/?full_size=false&compressed=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"thumb",
																""
															],
															"query": [
																{
																	"key": "full_size",
																	"value": "false",
																	"description": "whether to render the actual image and not a thumbnail version"
																},
																{
																	"key": "compressed",
																	"value": "<boolean>",
																	"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
																}
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/thumb/?full_size=false&compressed=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"thumb",
																""
															],
															"query": [
																{
																	"key": "full_size",
																	"value": "false",
																	"description": "whether to render the actual image and not a thumbnail version"
																},
																{
																	"key": "compressed",
																	"value": "<boolean>",
																	"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
																}
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/thumb/?full_size=false&compressed=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"thumb",
																""
															],
															"query": [
																{
																	"key": "full_size",
																	"value": "false",
																	"description": "whether to render the actual image and not a thumbnail version"
																},
																{
																	"key": "compressed",
																	"value": "<boolean>",
																	"description": "whether to compress the output image to reduce file size,defaults to opposite of `full_size`"
																}
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "watermark",
									"item": [
										{
											"name": "images watermark",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/watermark/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														"watermark",
														""
													],
													"variable": [
														{
															"key": "identifier",
															"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
															"description": "(Required) "
														}
													]
												},
												"description": "Note that this endpoint is deprecated.\n\n---\n\n🚧 **TODO:** Document this."
											},
											"response": [
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/watermark/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"watermark",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												},
												{
													"name": "Untitled Response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/images/:identifier/watermark/",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"images",
																":identifier",
																"watermark",
																""
															],
															"variable": [
																{
																	"key": "identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"detail\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "images detail",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/images/:identifier/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"images",
												":identifier",
												""
											],
											"variable": [
												{
													"key": "identifier",
													"value": "3abc665b-94ea-41f3-9b59-e7e28d2b847d",
													"description": "(Required) "
												}
											]
										},
										"description": "\nGet the details of a specified image.\n\nBy using this endpoint, you can obtain info about images such as\n`id`, `title`, `indexed_on`, `foreign_landing_url`, `url`, `creator`, `creator_url`, `license`, `license_version`, `license_url`, `provider`, `source`, `category`, `filesize`, `filetype`, `tags`, `attribution`, `fields_matched`, `mature`, `height`, `width`, `thumbnail`, `detail_url`, `related_url` and `unstable__sensitivity`"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														""
													],
													"variable": [
														{
															"key": "identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"attribution\": \"<string>\",\n  \"detail_url\": \"<uri>\",\n  \"fields_matched\": [],\n  \"id\": \"<string>\",\n  \"indexed_on\": \"<dateTime>\",\n  \"license\": \"<string>\",\n  \"license_url\": \"<string>\",\n  \"mature\": \"<boolean>\",\n  \"related_url\": \"<uri>\",\n  \"tags\": [\n    {\n      \"name\": \"<string>\",\n      \"unstable__provider\": \"<string>\",\n      \"accuracy\": \"<double>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"unstable__provider\": \"<string>\",\n      \"accuracy\": \"<double>\"\n    }\n  ],\n  \"thumbnail\": \"<uri>\",\n  \"title\": \"<string>\",\n  \"foreign_landing_url\": \"<string>\",\n  \"url\": \"<string>\",\n  \"creator\": \"<string>\",\n  \"creator_url\": \"<string>\",\n  \"license_version\": \"<string>\",\n  \"provider\": \"<string>\",\n  \"source\": \"<string>\",\n  \"category\": \"<string>\",\n  \"filesize\": \"<integer>\",\n  \"filetype\": \"<string>\",\n  \"height\": \"<integer>\",\n  \"width\": \"<integer>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														""
													],
													"variable": [
														{
															"key": "identifier"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/:identifier/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														":identifier",
														""
													],
													"variable": [
														{
															"key": "identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "oembed",
							"item": [
								{
									"name": "images oembed",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/images/oembed/?url=<uri>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"images",
												"oembed",
												""
											],
											"query": [
												{
													"key": "url",
													"value": "<uri>",
													"description": "(Required) The link to an image present in Openverse."
												}
											]
										},
										"description": "Retrieve the structured data for a specified image URL as per the\n[oEmbed spec](https://oembed.com/).\n\nThis info can be used to embed the image on the consumer's website. Only\nJSON format is supported."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/oembed/?url=<uri>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														"oembed",
														""
													],
													"query": [
														{
															"key": "url",
															"value": "<uri>",
															"description": "(Required) The link to an image present in Openverse."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"author_name\": \"<string>\",\n  \"author_url\": \"<uri>\",\n  \"height\": \"<integer>\",\n  \"license_url\": \"<string>\",\n  \"type\": \"photo\",\n  \"version\": \"1.0\",\n  \"width\": \"<integer>\",\n  \"title\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/oembed/?url=<uri>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														"oembed",
														""
													],
													"query": [
														{
															"key": "url",
															"value": "<uri>",
															"description": "(Required) The link to an image present in Openverse."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/oembed/?url=<uri>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														"oembed",
														""
													],
													"query": [
														{
															"key": "url",
															"value": "<uri>",
															"description": "(Required) The link to an image present in Openverse."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/oembed/?url=<uri>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														"oembed",
														""
													],
													"query": [
														{
															"key": "url",
															"value": "<uri>",
															"description": "(Required) The link to an image present in Openverse."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "stats",
							"item": [
								{
									"name": "images stats",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/images/stats/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"images",
												"stats",
												""
											]
										},
										"description": "\nGet a list of all content providers and their respective number of\nimages in the Openverse catalog.\n\nBy using this endpoint, you can obtain info about content providers such\nas `source_name`, `display_name`, `source_url`, `logo_url` and `media_count`."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/stats/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														"stats",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"display_name\": \"<string>\",\n    \"logo_url\": \"<string>\",\n    \"media_count\": \"<integer>\",\n    \"source_name\": \"<string>\",\n    \"source_url\": \"<uri>\"\n  },\n  {\n    \"display_name\": \"<string>\",\n    \"logo_url\": \"<string>\",\n    \"media_count\": \"<integer>\",\n    \"source_name\": \"<string>\",\n    \"source_url\": \"<uri>\"\n  }\n]"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/images/stats/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"images",
														"stats",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "images search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/images/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&aspect_ratio=<string>&size=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"images",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "The page of results to retrieve."
										},
										{
											"key": "page_size",
											"value": "20",
											"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
										},
										{
											"key": "q",
											"value": "<string>",
											"description": "A query string that should not exceed 200 characters in length"
										},
										{
											"key": "source",
											"value": "<string>",
											"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
										},
										{
											"key": "excluded_source",
											"value": "<string>",
											"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
										},
										{
											"key": "tags",
											"value": "<string>",
											"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
										},
										{
											"key": "title",
											"value": "<string>",
											"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
										},
										{
											"key": "creator",
											"value": "<string>",
											"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
										},
										{
											"key": "unstable__collection",
											"value": "creator",
											"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
										},
										{
											"key": "unstable__tag",
											"value": "<string>",
											"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
										},
										{
											"key": "license",
											"value": "<string>",
											"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
										},
										{
											"key": "license_type",
											"value": "<string>",
											"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
										},
										{
											"key": "filter_dead",
											"value": "true",
											"description": "Control whether 404 links are filtered out."
										},
										{
											"key": "extension",
											"value": "<string>",
											"description": "A comma separated list of desired file extensions."
										},
										{
											"key": "mature",
											"value": "false",
											"description": "Whether to include sensitive content."
										},
										{
											"key": "unstable__sort_by",
											"value": "relevance",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
										},
										{
											"key": "unstable__sort_dir",
											"value": "desc",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
										},
										{
											"key": "unstable__authority",
											"value": "false",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
										},
										{
											"key": "unstable__authority_boost",
											"value": "1",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
										},
										{
											"key": "unstable__include_sensitive_results",
											"value": "false",
											"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
										},
										{
											"key": "category",
											"value": "<string>",
											"description": "A comma separated list of categories; available categories include: `digitized_artwork`, `illustration`, and `photograph`."
										},
										{
											"key": "aspect_ratio",
											"value": "<string>",
											"description": "A comma separated list of aspect ratios; available aspect ratios include: `square`, `tall`, and `wide`."
										},
										{
											"key": "size",
											"value": "<string>",
											"description": "A comma separated list of image sizes; available image sizes include: `large`, `medium`, and `small`."
										}
									]
								},
								"description": "\nReturn images that match the query.\n\nThis endpoint allows you to search within specific fields, or to retrieve\na collection of all images from a specific source, creator or tag.\nResults are paginated on the basis of the `page` parameter. The `page_size`\nparameter controls the total number of pages.\n\nAlthough there may be millions of relevant records, only the most relevant\nor the most recent several thousand records can be viewed. This is by design:\nthe search endpoint should be used to find the top 10,000 most relevant\nresults, not for exhaustive search or bulk download of every barely relevant\nresult. As such, the caller should not try to access pages beyond `page_count`,\nor else the server will reject the query.\n\n### Default search\nThe **default search** allows users to find media based on a query string.\nIt supports a wide range of optional filters to narrow down search results\naccording to specific needs.\n\nBy default, this endpoint performs a full-text search for the value of `q` parameter.\nYou can search within the `creator`, `title` or `tags` fields by omitting\nthe `q` parameter and using one of these field parameters.\nThese results can be filtered by `source`, `excluded_source`, `license`, `license_type`, `creator`, `tags`, `title`, `filter_dead`, `extension`, `mature`, `unstable__include_sensitive_results`, `category`, `aspect_ratio` and `size`.\n\nThe default search results are sorted by relevance.\n\n### Collection search\nThe collection search allows to retrieve a collection of media from a specific source,\ncreator or tag. The `unstable__collection` parameter is used to specify the type of collection to retrieve.\n\n- `unstable__collection=tag&unstable__tag=tagName` will return the media with tag `tagName`.\n- `unstable__collection=source&source=sourceName` will return the media from source `sourceName`.\n- `unstable__collection=creator&creator=creatorName&source=sourceName` will return the media by creator `creatorName` at `sourceName`.\n\nCollection results are sorted by the time they were added to Openverse, with the most recent\nadditions appearing first. The filters such as `license` are not available for collections.\n"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/images/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&aspect_ratio=<string>&size=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"images",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of results to retrieve."
												},
												{
													"key": "page_size",
													"value": "20",
													"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "A query string that should not exceed 200 characters in length"
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
												},
												{
													"key": "excluded_source",
													"value": "<string>",
													"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "creator",
													"value": "<string>",
													"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
												},
												{
													"key": "unstable__collection",
													"value": "creator",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
												},
												{
													"key": "unstable__tag",
													"value": "<string>",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
												},
												{
													"key": "license",
													"value": "<string>",
													"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
												},
												{
													"key": "license_type",
													"value": "<string>",
													"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
												},
												{
													"key": "filter_dead",
													"value": "true",
													"description": "Control whether 404 links are filtered out."
												},
												{
													"key": "extension",
													"value": "<string>",
													"description": "A comma separated list of desired file extensions."
												},
												{
													"key": "mature",
													"value": "false",
													"description": "Whether to include sensitive content."
												},
												{
													"key": "unstable__sort_by",
													"value": "relevance",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
												},
												{
													"key": "unstable__sort_dir",
													"value": "desc",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
												},
												{
													"key": "unstable__authority",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
												},
												{
													"key": "unstable__authority_boost",
													"value": "1",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
												},
												{
													"key": "unstable__include_sensitive_results",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "A comma separated list of categories; available categories include: `digitized_artwork`, `illustration`, and `photograph`."
												},
												{
													"key": "aspect_ratio",
													"value": "<string>",
													"description": "A comma separated list of aspect ratios; available aspect ratios include: `square`, `tall`, and `wide`."
												},
												{
													"key": "size",
													"value": "<string>",
													"description": "A comma separated list of image sizes; available image sizes include: `large`, `medium`, and `small`."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"page\": \"<integer>\",\n  \"page_size\": \"<integer>\",\n  \"results\": [\n    {\n      \"attribution\": \"<string>\",\n      \"detail_url\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"indexed_on\": \"<dateTime>\",\n      \"license\": \"<string>\",\n      \"license_url\": \"<string>\",\n      \"mature\": \"<boolean>\",\n      \"related_url\": \"<uri>\",\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        }\n      ],\n      \"thumbnail\": \"<uri>\",\n      \"title\": \"<string>\",\n      \"foreign_landing_url\": \"<string>\",\n      \"url\": \"<string>\",\n      \"creator\": \"<string>\",\n      \"creator_url\": \"<string>\",\n      \"license_version\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"source\": \"<string>\",\n      \"category\": \"<string>\",\n      \"filesize\": \"<integer>\",\n      \"filetype\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"width\": \"<integer>\"\n    },\n    {\n      \"attribution\": \"<string>\",\n      \"detail_url\": \"<uri>\",\n      \"id\": \"<string>\",\n      \"indexed_on\": \"<dateTime>\",\n      \"license\": \"<string>\",\n      \"license_url\": \"<string>\",\n      \"mature\": \"<boolean>\",\n      \"related_url\": \"<uri>\",\n      \"tags\": [\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"unstable__provider\": \"<string>\",\n          \"accuracy\": \"<double>\"\n        }\n      ],\n      \"thumbnail\": \"<uri>\",\n      \"title\": \"<string>\",\n      \"foreign_landing_url\": \"<string>\",\n      \"url\": \"<string>\",\n      \"creator\": \"<string>\",\n      \"creator_url\": \"<string>\",\n      \"license_version\": \"<string>\",\n      \"provider\": \"<string>\",\n      \"source\": \"<string>\",\n      \"category\": \"<string>\",\n      \"filesize\": \"<integer>\",\n      \"filetype\": \"<string>\",\n      \"height\": \"<integer>\",\n      \"width\": \"<integer>\"\n    }\n  ],\n  \"result_count\": \"<integer>\",\n  \"page_count\": \"<integer>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/images/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&aspect_ratio=<string>&size=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"images",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of results to retrieve."
												},
												{
													"key": "page_size",
													"value": "20",
													"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "A query string that should not exceed 200 characters in length"
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
												},
												{
													"key": "excluded_source",
													"value": "<string>",
													"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "creator",
													"value": "<string>",
													"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
												},
												{
													"key": "unstable__collection",
													"value": "creator",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
												},
												{
													"key": "unstable__tag",
													"value": "<string>",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
												},
												{
													"key": "license",
													"value": "<string>",
													"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
												},
												{
													"key": "license_type",
													"value": "<string>",
													"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
												},
												{
													"key": "filter_dead",
													"value": "true",
													"description": "Control whether 404 links are filtered out."
												},
												{
													"key": "extension",
													"value": "<string>",
													"description": "A comma separated list of desired file extensions."
												},
												{
													"key": "mature",
													"value": "false",
													"description": "Whether to include sensitive content."
												},
												{
													"key": "unstable__sort_by",
													"value": "relevance",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
												},
												{
													"key": "unstable__sort_dir",
													"value": "desc",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
												},
												{
													"key": "unstable__authority",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
												},
												{
													"key": "unstable__authority_boost",
													"value": "1",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
												},
												{
													"key": "unstable__include_sensitive_results",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "A comma separated list of categories; available categories include: `digitized_artwork`, `illustration`, and `photograph`."
												},
												{
													"key": "aspect_ratio",
													"value": "<string>",
													"description": "A comma separated list of aspect ratios; available aspect ratios include: `square`, `tall`, and `wide`."
												},
												{
													"key": "size",
													"value": "<string>",
													"description": "A comma separated list of image sizes; available image sizes include: `large`, `medium`, and `small`."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/images/?page=1&page_size=20&q=<string>&source=<string>&excluded_source=<string>&tags=<string>&title=<string>&creator=<string>&unstable__collection=creator&unstable__tag=<string>&license=<string>&license_type=<string>&filter_dead=true&extension=<string>&mature=false&unstable__sort_by=relevance&unstable__sort_dir=desc&unstable__authority=false&unstable__authority_boost=1&unstable__include_sensitive_results=false&category=<string>&aspect_ratio=<string>&size=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"images",
												""
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"description": "The page of results to retrieve."
												},
												{
													"key": "page_size",
													"value": "20",
													"description": "Number of results to return per page. Maximum is 500 for authenticated requests, and 20 for unauthenticated requests."
												},
												{
													"key": "q",
													"value": "<string>",
													"description": "A query string that should not exceed 200 characters in length"
												},
												{
													"key": "source",
													"value": "<string>",
													"description": "\nFor default search, a comma separated list of data sources.\nWhen the `unstable__collection` parameter is used, this parameter only accepts a single source.\n\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
												},
												{
													"key": "excluded_source",
													"value": "<string>",
													"description": "\nA comma separated list of data sources to exclude from the search.\nValid values are `source_name`s from the stats endpoint: https://api.openverse.org/v1/images/stats/.\n"
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Search by tag only. Cannot be used with `q`. The search is fuzzy, so `tags=cat` will match any value that includes the word `cat`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "Search by title only. Cannot be used with `q`. The search is fuzzy, so `title=photo` will match any value that includes the word `photo`. If the value contains space, items that contain any of the words in the value will match. To search for several values, join them with a comma."
												},
												{
													"key": "creator",
													"value": "<string>",
													"description": "\n_When `q` parameter is present, `creator` parameter is ignored._\n\n**Creator collection**\nWhen used with `unstable__collection=creator&source=sourceName`, returns the collection of media\nby the specified creator. Notice that a single creator's media items\ncan be found on several sources, but this collection only returns the\nitems from the specified source.\nThis is why for this collection, both the creator and the source\nparameters are required, and matched exactly. For a fuzzy creator search,\nuse the default search without the `unstable__collection` parameter.\n\n**Creator search**\nWhen used without the `unstable__collection` parameter, will search in the creator field only.\nThe search is fuzzy, so `creator=john` will match any value that includes the\nword `john`. If the value contains space, items that contain any of\nthe words in the value will match. To search for several values,\njoin them with a comma.\n"
												},
												{
													"key": "unstable__collection",
													"value": "creator",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\nThe kind of media collection to return.\n\nMust be used with `unstable__tag`, `source` or `creator`+`source`\n\n* `tag` - tag\n* `source` - source\n* `creator` - creator"
												},
												{
													"key": "unstable__tag",
													"value": "<string>",
													"description": "\n\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\n\n_Must be used with `unstable__collection=tag`_\n\nGet the collection of media with a specific tag. Returns the collection of media\nthat has the specified tag, matching exactly and entirely.\n\nDifferences that will cause tags to not match are:\n- upper and lower case letters\n- diacritical marks\n- hyphenation\n- spacing\n- multi-word tags where the query is only one of the words in the tag\n- multi-word tags where the words are in a different order.\n\nExamples of tags that **do not** match:\n- \"Low-Quality\" and \"low-quality\"\n- \"jalapeño\" and \"jalapeno\"\n- \"Saint Pierre des Champs\" and \"Saint-Pierre-des-Champs\"\n- \"dog walking\" and \"dog  walking\" (where the latter has two spaces between the\nlast two words, as in a typographical error)\n- \"runner\" and \"marathon runner\"\n- \"exclaiming loudly\" and \"loudly exclaiming\"\n\nFor non-exact or multi-tag matching, using the `tags` query parameter.\n"
												},
												{
													"key": "license",
													"value": "<string>",
													"description": "A comma separated list of licenses; available licenses include: `by`, `by-nc`, `by-nc-nd`, `by-nc-sa`, `by-nd`, `by-sa`, `cc0`, `nc-sampling+`, `pdm`, and `sampling+`."
												},
												{
													"key": "license_type",
													"value": "<string>",
													"description": "A comma separated list of license types; available license types include: `all`, `all-cc`, `commercial`, and `modification`."
												},
												{
													"key": "filter_dead",
													"value": "true",
													"description": "Control whether 404 links are filtered out."
												},
												{
													"key": "extension",
													"value": "<string>",
													"description": "A comma separated list of desired file extensions."
												},
												{
													"key": "mature",
													"value": "false",
													"description": "Whether to include sensitive content."
												},
												{
													"key": "unstable__sort_by",
													"value": "relevance",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe field which should be the basis for sorting results.\n\n* `relevance` - Relevance\n* `indexed_on` - Indexing date"
												},
												{
													"key": "unstable__sort_dir",
													"value": "desc",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe direction of sorting. Cannot be applied when sorting by `relevance`.\n\n* `desc` - Descending\n* `asc` - Ascending"
												},
												{
													"key": "unstable__authority",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nIf enabled, the search will add a boost to results that are from authoritative sources."
												},
												{
													"key": "unstable__authority_boost",
													"value": "1",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nThe boost coefficient to apply to authoritative sources, multiplied with the popularity boost."
												},
												{
													"key": "unstable__include_sensitive_results",
													"value": "false",
													"description": "\n\n\n_Caution: Parameters prefixed with `unstable__` are experimental and\nmay change or be removed without notice in future updates. Use them\nwith caution as they are not covered by our API versioning policy._\n\n\nWhether to include results considered sensitive."
												},
												{
													"key": "category",
													"value": "<string>",
													"description": "A comma separated list of categories; available categories include: `digitized_artwork`, `illustration`, and `photograph`."
												},
												{
													"key": "aspect_ratio",
													"value": "<string>",
													"description": "A comma separated list of aspect ratios; available aspect ratios include: `square`, `tall`, and `wide`."
												},
												{
													"key": "size",
													"value": "<string>",
													"description": "A comma separated list of image sizes; available image sizes include: `large`, `medium`, and `small`."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "rate_limit",
					"item": [
						{
							"name": "key info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/rate_limit/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"rate_limit",
										""
									]
								},
								"description": "Get information about your API key.\n\nYou can use this endpoint to get information about your API key such as\n`requests_this_minute`, `requests_today`, and `rate_limit_model`.\n\n> ℹ️ **NOTE:** If you get a 401 Unauthorized, it means your token is invalid\n> (malformed, non-existent, or expired)."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/rate_limit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"rate_limit",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"rate_limit_model\": \"<string>\",\n  \"requests_this_minute\": \"<integer>\",\n  \"requests_today\": \"<integer>\",\n  \"verified\": \"<boolean>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/rate_limit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"rate_limit",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Too Many Requests",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/rate_limit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"rate_limit",
												""
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/rate_limit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"rate_limit",
												""
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.openverse.org"
		}
	]
}